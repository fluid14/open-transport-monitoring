type Device {
	name: String!
	arn: String!
}

input DeviceMessage {
	test_data: Int!
}

type Message {
	device: String
	test_data: Int
}

type Mutation {
	createDevice(name: String!): Device!
	publishDeviceMessage(device: String!, message: DeviceMessage!): Message
	addVehicle(
		deviceId: String!,
		numberPlate: String!,
		brand: String!,
		model: String!,
		insuranceDate: String!,
		inspectionDate: String!
	): Vehicle
	updateVehicle(
		vehicleId: String!,
		deviceId: String!,
		numberPlate: String!,
		brand: String!,
		model: String!,
		insuranceDate: String!,
		inspectionDate: String!
	): Vehicle
	deleteVehicle(vehicleId: String!): Boolean
}

type Query {
	allDevices: [Device]!
	allVehicles: [Vehicle]
	singleVehicle(vehicleId: String!): Vehicle
	vehicleParameterLimits: [ParameterLimit]
}

type Subscription {
	publishedDeviceMessage(device: String): Message
		@aws_subscribe(mutations: ["publishDeviceMessage"])
}

schema {
	query: Query
	mutation: Mutation
	subscription: Subscription
}

type Vehicle {
	vehicleId: String!
	deviceId: String!
	numberPlate: String!
	brand: String!
	model: String!
	insuranceDate: String!
	inspectionDate: String!
}

type ParameterLimit {
	name: String!,
	min: Int!,
	max: Int!,
	unit: String!
}